// <auto-generated />
using System;
using Hackathon.Premiersoft.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hackathon.Premiersoft.API.Data.Migrations
{
    [DbContext(typeof(PremiersoftHackathonDbContext))]
    [Migration("20250921134456_NomeDaMigration")]
    partial class NomeDaMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Cid10", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cid10");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Cid10Especialidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Cid10Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EspecialidadePrimaria")
                        .HasColumnType("bit");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cid10Id");

                    b.ToTable("Cid10Especialidades");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.DoctorsHospitals", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("HospitalId");

                    b.ToTable("DoctorsHospitals");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Estados", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo_uf")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Hospitais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidades")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Leitos_totais")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Hospitais");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Import", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<int>("FileFormat")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FinishedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ImportedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("S3PreSignedUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDuplicatedRegisters")
                        .HasColumnType("int");

                    b.Property<int?>("TotalFailedRegisters")
                        .HasColumnType("int");

                    b.Property<int?>("TotalImportedRegisters")
                        .HasColumnType("int");

                    b.Property<int?>("TotalRegisters")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Imports");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.LineError", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Line")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImportId");

                    b.ToTable("LineErrors");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Lookup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileFieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TableFieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImportId");

                    b.ToTable("Lookups");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Medicos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Codigo_MunicipioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_completo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo_MunicipioId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Municipios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Capital")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo_ibge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo_uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ddd")
                        .HasColumnType("int");

                    b.Property<string>("Fuso_horario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Populacao")
                        .HasColumnType("int");

                    b.Property<int>("Siafi_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Pacientes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Cid10Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Codigo_MunicipioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Convenio")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_completo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cid10Id");

                    b.HasIndex("Codigo_MunicipioId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.PatientsHospitals", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlocacao")
                        .HasColumnType("datetime2");

                    b.Property<double>("Distancia")
                        .HasColumnType("float");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientsHospitals");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Cid10Especialidade", b =>
                {
                    b.HasOne("Hackathon.Premiersoft.API.Models.Cid10", "Cid10")
                        .WithMany()
                        .HasForeignKey("Cid10Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cid10");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.DoctorsHospitals", b =>
                {
                    b.HasOne("Hackathon.Premiersoft.API.Models.Medicos", "Doctor")
                        .WithMany("DoctorsHospitals")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hackathon.Premiersoft.API.Models.Hospitais", "Hospital")
                        .WithMany("DoctorsHospitals")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Hospitais", b =>
                {
                    b.HasOne("Hackathon.Premiersoft.API.Models.Municipios", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.LineError", b =>
                {
                    b.HasOne("Hackathon.Premiersoft.API.Models.Import", "Import")
                        .WithMany("LineErrors")
                        .HasForeignKey("ImportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Import");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Lookup", b =>
                {
                    b.HasOne("Hackathon.Premiersoft.API.Models.Import", "Import")
                        .WithMany()
                        .HasForeignKey("ImportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Import");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Medicos", b =>
                {
                    b.HasOne("Hackathon.Premiersoft.API.Models.Municipios", "Codigo_Municipio")
                        .WithMany()
                        .HasForeignKey("Codigo_MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Codigo_Municipio");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Pacientes", b =>
                {
                    b.HasOne("Hackathon.Premiersoft.API.Models.Cid10", "Cid10")
                        .WithMany()
                        .HasForeignKey("Cid10Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.Premiersoft.API.Models.Municipios", "Codigo_Municipio")
                        .WithMany()
                        .HasForeignKey("Codigo_MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cid10");

                    b.Navigation("Codigo_Municipio");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.PatientsHospitals", b =>
                {
                    b.HasOne("Hackathon.Premiersoft.API.Models.Hospitais", "Hospital")
                        .WithMany("PatientsHospitals")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hackathon.Premiersoft.API.Models.Pacientes", "Patient")
                        .WithMany("PatientsHospitals")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hospital");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Hospitais", b =>
                {
                    b.Navigation("DoctorsHospitals");

                    b.Navigation("PatientsHospitals");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Import", b =>
                {
                    b.Navigation("LineErrors");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Medicos", b =>
                {
                    b.Navigation("DoctorsHospitals");
                });

            modelBuilder.Entity("Hackathon.Premiersoft.API.Models.Pacientes", b =>
                {
                    b.Navigation("PatientsHospitals");
                });
#pragma warning restore 612, 618
        }
    }
}
